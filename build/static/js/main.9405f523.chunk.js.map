{"version":3,"sources":["helpers/Path.js","services/firebase.js","services/auth.js","images/sowLogo.png","components/Navbar.js","pages/Home.js","services/storage.js","helpers/Role.js","services/users.js","pages/Dashboard.js","pages/profile/PropertyComponent.js","helpers/Universities.js","pages/profile/Profile.js","pages/authentication/SignUp.js","pages/authentication/SignIn.js","pages/authentication/ForgotPassword.js","helpers/History.js","helpers/Theme.js","pages/profile/ResetPassword.js","App.js","index.js"],"names":["Path","Home","SignIn","ForgotPassword","SignUp","Chat","Dashboard","Profile","ResetPassword","firebase","apps","length","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","db","firestore","storage","signup","email","password","role","createUserWithEmailAndPassword","then","collection","doc","currentUser","uid","set","logout","signOut","isAuthenticated","useStyles","makeStyles","theme","blackText","color","palette","common","black","logOutButton","width","textTransform","borderRadius","marginRight","spacing","navBarPadding","margin","sowLogo","height","cursor","NavBar","active","history","useHistory","classes","Container","maxWidth","Grid","className","container","justify","alignItems","item","alt","onClick","push","src","logo","Link","component","ReactRouterLink","underline","to","Button","variant","disableElevation","useState","resources","setResources","useEffect","Promise","resolve","reject","ref","child","listAll","res","items","catch","error","r","Typography","map","file","i","url","fullPath","getDownloadURL","downloadUrl","window","open","name","Roles","roleToString","roleNumber","getUser","get","docRef","data","updateField","value","label","update","user","setUser","user_i","firstName","lastName","PropertyComponent","handleChange","setMessageState","currentTextFieldEditState","setCurrentTextFieldEditState","save","xs","TextField","fullWidth","onChange","defaultValue","disabled","response","showMessage","message","severity","universities","messageState","localChurch","university","universityDegree","editState","setEditState","e","target","Snackbar","onClose","autoHideDuration","Alert","elevation","bool","FormControl","InputLabel","id","Select","labelId","uni","MenuItem","serviceAtSow","form","button","bottomLink","textDecoration","fontSize","signUpFormValidationSchema","yup","shape","required","matches","confirmPassword","test","parent","state","setState","a","paper","align","gutterBottom","initialValues","onSubmit","values","submit","validationSchema","props","errors","touched","handleBlur","autoComplete","helperText","onBlur","type","size","signInFormValidationSchema","signInWithEmailAndPassword","signin","m","console","log","forgotPasswordValidationSchema","Dashbaord","sendPasswordResetEmail","createBrowserHistory","Theme","createMuiTheme","primary","light","main","dark","contrastText","secondary","resetPasswordFormValidationSchema","newPassword","updatePassword","success","PrivateRoute","Component","authenticated","rest","render","pathname","from","location","PublicRoute","App","loading","onAuthStateChanged","this","CssBaseline","ThemeProvider","exact","path","rootElement","document","getElementById","ReactDOM"],"mappings":"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","file":"static/js/main.9405f523.chunk.js","sourcesContent":["export const Path = {\r\n  Home: \"/\",\r\n  SignIn: \"/sign-in\",\r\n  ForgotPassword: \"/forgot-password\",\r\n  SignUp: \"/sign-up\",\r\n  Chat: \"/chat\",\r\n  Dashboard: \"/dashboard\",\r\n  Profile: \"/profile\",\r\n  ResetPassword: \"/reset-password\",\r\n};\r\n","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\";\r\nimport \"firebase/firestore\";\r\nimport \"firebase/storage\";\r\n\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyBRq1nb-_qZHBH29KijWu1dsdczNDqGnhM\",\r\n  authDomain: \"sowwebsite-50dec.firebaseapp.com\",\r\n  databaseURL: \"https://sowwebsite-50dec-default-rtdb.firebaseio.com\",\r\n  projectId: \"sowwebsite-50dec\",\r\n  storageBucket: \"sowwebsite-50dec.appspot.com\",\r\n  messagingSenderId: \"186986415272\",\r\n  appId: \"1:186986415272:web:a6a4b69293b8e108ca2e9d\",\r\n  measurementId: \"G-NJ09J2P912\",\r\n};\r\n\r\nif (!firebase.apps.length) {\r\n  firebase.initializeApp(firebaseConfig);\r\n}\r\n\r\nexport const auth = firebase.auth();\r\nexport const db = firebase.firestore();\r\nexport const storage = firebase.storage();\r\n","import { auth, db } from \"./firebase\";\r\n\r\nexport const signup = (email, password, role) => {\r\n  return auth.createUserWithEmailAndPassword(email, password).then(() => {\r\n    db.collection(\"users\").doc(auth.currentUser.uid).set({\r\n      email: email,\r\n      role: role,\r\n    });\r\n  });\r\n};\r\n\r\nexport const signin = (email, password) => {\r\n  return new Promise((resolve, reject) => {\r\n    auth\r\n      .signInWithEmailAndPassword(email, password)\r\n      .then(() => {\r\n        resolve(\"Sign In Success\");\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\nexport const logout = () => {\r\n  return auth.signOut();\r\n};\r\n\r\nexport const isAuthenticated = () => {\r\n  return auth.currentUser ? true : false;\r\n};\r\n\r\nexport const resetPassword = (newPassword) => {\r\n  return new Promise((resolve, reject) => {\r\n    auth.currentUser\r\n      .updatePassword(newPassword)\r\n      .then(() => {\r\n        resolve(\"Update successful\");\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nexport const sendPasswordResetEmail = (email) => {\r\n  return new Promise((resolve, reject) => {\r\n    auth\r\n      .sendPasswordResetEmail(email)\r\n      .then(() => {\r\n        resolve(\"An email has been sent. Please check your inbox.\");\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n","export default __webpack_public_path__ + \"static/media/sowLogo.9ca503b8.png\";","import React from \"react\";\r\nimport { Grid, makeStyles, Link, Container, Button } from \"@material-ui/core\";\r\nimport { Link as ReactRouterLink, useHistory } from \"react-router-dom\";\r\nimport { Path } from \"../helpers/Path\";\r\nimport { isAuthenticated, logout } from \"../services/auth\";\r\nimport logo from \"../images/sowLogo.png\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  blackText: {\r\n    color: theme.palette.common.black,\r\n  },\r\n  logOutButton: {\r\n    width: \"98px\",\r\n    textTransform: \"none\",\r\n    borderRadius: 8,\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  navBarPadding: {\r\n    margin: theme.spacing(2, 2, 2, 2),\r\n  },\r\n  sowLogo: {\r\n    height: \"40px\",\r\n    cursor: \"pointer\",\r\n  },\r\n}));\r\n\r\nexport const NavBar = ({ active }) => {\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container maxWidth=\"lg\">\r\n      <Grid\r\n        className={classes.navBarPadding}\r\n        container\r\n        justify=\"left\"\r\n        alignItems=\"center\"\r\n        spacing={4}\r\n      >\r\n        <Grid item>\r\n          <img\r\n            className={classes.sowLogo}\r\n            alt=\"SOW Logo\"\r\n            onClick={() => history.push(Path.Home)}\r\n            src={logo}\r\n          />\r\n        </Grid>\r\n        {isAuthenticated() ? (\r\n          <>\r\n            <Grid item>\r\n              <Link\r\n                component={ReactRouterLink}\r\n                underline={active === Path.Dashboard ? \"always\" : \"hover\"}\r\n                to={Path.Dashboard}\r\n              >\r\n                Dashboard\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link\r\n                component={ReactRouterLink}\r\n                underline={active === Path.Profile ? \"always\" : \"hover\"}\r\n                to={Path.Profile}\r\n              >\r\n                Profile\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Button\r\n                className={classes.logOutButton}\r\n                variant=\"outlined\"\r\n                color=\"primary\"\r\n                onClick={logout}\r\n                disableElevation\r\n              >\r\n                Logout\r\n              </Button>\r\n            </Grid>\r\n          </>\r\n        ) : (\r\n          <>\r\n            <Grid item>\r\n              <Link\r\n                underline=\"hover\"\r\n                component={ReactRouterLink}\r\n                to={Path.SignIn}\r\n              >\r\n                SignIn\r\n              </Link>\r\n            </Grid>\r\n            <Grid item>\r\n              <Link\r\n                underline=\"hover\"\r\n                component={ReactRouterLink}\r\n                to={Path.SignUp}\r\n              >\r\n                SignUp\r\n              </Link>\r\n            </Grid>\r\n          </>\r\n        )}\r\n      </Grid>\r\n    </Container>\r\n  );\r\n};\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { Container, Typography, Button } from \"@material-ui/core\";\r\nimport { Path } from \"../helpers/Path\";\r\nimport { NavBar } from \"../components/Navbar\";\r\nimport { getList, getRef } from \"../services/storage\";\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   title: {\r\n//     backgroundColor: \"yellow\",\r\n//   },\r\n// }));\r\n\r\nexport const Home = () => {\r\n  const [resources, setResources] = useState([]);\r\n  // const classes = useStyles();\r\n  useEffect(() => {\r\n    getList().then((r) => {\r\n      setResources(r);\r\n    });\r\n  }, []);\r\n\r\n  return resources ? (\r\n    <>\r\n      <NavBar active={Path.Home} />\r\n      <Container maxWidth=\"sm\">\r\n        <Typography>Hello</Typography>\r\n        {resources.map((file, i) => (\r\n          <Button\r\n            onClick={() =>\r\n              getRef(file.fullPath).then((r) => {\r\n                window.open(r);\r\n              })\r\n            }\r\n          >\r\n            {file.name}\r\n          </Button>\r\n        ))}\r\n      </Container>\r\n    </>\r\n  ) : (\r\n    <>error</>\r\n  );\r\n};\r\n","import { storage } from \"../services/firebase\";\r\n\r\nexport const getRef = (url) => {\r\n  return new Promise((resolve, reject) => {\r\n    storage\r\n      .ref()\r\n      .child(url)\r\n      .getDownloadURL()\r\n      .then((downloadUrl) => {\r\n        resolve(downloadUrl);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nexport const getList = () => {\r\n  return new Promise((resolve, reject) => {\r\n    storage\r\n      .ref()\r\n      .child(\"resources\")\r\n      .listAll()\r\n      .then((res) => {\r\n        resolve(res.items);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n","export const Roles = {\r\n  Admin: 0,\r\n  Staff: 1,\r\n  Executive: 2,\r\n  StudentLeader: 3,\r\n  Member: 9,\r\n};\r\n\r\nexport const roleToString = (roleNumber) => {\r\n  switch (roleNumber) {\r\n    case Roles.Admin:\r\n      return \"Admin\";\r\n    case Roles.Staff:\r\n      return \"Staff\";\r\n    case Roles.Executive:\r\n      return \"Executive\";\r\n    case Roles.StudentLeader:\r\n      return \"Student Leader\";\r\n    case Roles.Member:\r\n      return \"Member\";\r\n    default:\r\n      return \"N/A\";\r\n  }\r\n};\r\n","import { db, auth } from \"../services/firebase\";\r\n\r\nexport const getUser = () => {\r\n  return new Promise((resolve, reject) => {\r\n    db.collection(\"users\")\r\n      .doc(auth.currentUser.uid)\r\n      .get()\r\n      .then((docRef) => {\r\n        resolve(docRef.data());\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n\r\nexport const updateField = (name, value, label) => {\r\n  return new Promise((resolve, reject) => {\r\n    db.collection(\"users\")\r\n      .doc(auth.currentUser.uid)\r\n      .update({\r\n        [name]: value,\r\n      })\r\n      .then(() => {\r\n        resolve(\"Successfully updated \" + label);\r\n      })\r\n      .catch((error) => {\r\n        reject(error);\r\n      });\r\n  });\r\n};\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Container, Typography } from \"@material-ui/core\";\r\nimport { Path } from \"../helpers/Path\";\r\nimport { NavBar } from \"../components/Navbar\";\r\nimport { roleToString } from \"../helpers/Role\";\r\nimport { getUser } from \"../services/users\";\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   title: {\r\n//     backgroundColor: \"yellow\",\r\n//   },\r\n// }));\r\n\r\nexport const Dashboard = () => {\r\n  const [user, setUser] = useState(null);\r\n  // const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    getUser().then((user_i) => {\r\n      setUser(user_i);\r\n    });\r\n  }, []);\r\n\r\n  return user ? (\r\n    <>\r\n      <NavBar active={Path.Dashboard} />\r\n      <Container maxWidth=\"sm\">\r\n        <Typography>\r\n          Hello {user.firstName} {user.lastName}\r\n        </Typography>\r\n        <Typography>Your rank: {roleToString(user.role)}</Typography>\r\n      </Container>\r\n    </>\r\n  ) : (\r\n    <>error</>\r\n  );\r\n};\r\n","import React from \"react\";\r\nimport { TextField, Button, Grid, Typography } from \"@material-ui/core\";\r\n\r\nexport const PropertyComponent = ({\r\n  label,\r\n  name,\r\n  handleChange,\r\n  value,\r\n  setMessageState,\r\n  currentTextFieldEditState,\r\n  setCurrentTextFieldEditState,\r\n  save,\r\n}) => {\r\n  return (\r\n    <Grid container item xs={12} alignItems=\"center\" justify=\"flex-start\">\r\n      {currentTextFieldEditState ? (\r\n        <>\r\n          <Grid item xs={6}>\r\n            <TextField\r\n              fullWidth\r\n              label={label}\r\n              name={name}\r\n              onChange={handleChange}\r\n              defaultValue={value}\r\n              disabled={!currentTextFieldEditState}\r\n            ></TextField>\r\n          </Grid>\r\n          <Button onClick={() => setCurrentTextFieldEditState(false)}>\r\n            Cancel\r\n          </Button>\r\n          <Button\r\n            onClick={() => {\r\n              save(name, value, label)\r\n                .then((response) => {\r\n                  setMessageState({\r\n                    showMessage: true,\r\n                    message: response,\r\n                    severity: \"success\",\r\n                  });\r\n                  setCurrentTextFieldEditState(false);\r\n                })\r\n                .catch((error) => {\r\n                  setMessageState({\r\n                    showMessage: true,\r\n                    message: error,\r\n                    severity: \"error\",\r\n                  });\r\n                });\r\n            }}\r\n          >\r\n            Save\r\n          </Button>\r\n        </>\r\n      ) : (\r\n        <>\r\n          <Grid item xs={6}>\r\n            <Typography>\r\n              {label}: {value}\r\n            </Typography>\r\n          </Grid>\r\n          <Button onClick={() => setCurrentTextFieldEditState(true)}>\r\n            Edit\r\n          </Button>\r\n        </>\r\n      )}\r\n    </Grid>\r\n  );\r\n};\r\n","export const universities = [\r\n  \"University of Sydney\",\r\n  \"University of New South Wales\",\r\n  \"University of Technology, Sydney\",\r\n  \"Macquarie University\",\r\n  \"Australian Catholic University\",\r\n];\r\n","import React, { useState, useEffect } from \"react\";\r\nimport { Link as ReactRouterLink } from \"react-router-dom\";\r\nimport {\r\n  Container,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n  Snackbar,\r\n  Grid,\r\n  Link,\r\n  Button,\r\n  Typography,\r\n} from \"@material-ui/core\";\r\nimport Alert from \"@material-ui/lab/Alert\";\r\nimport { Path } from \"../../helpers/Path\";\r\nimport { NavBar } from \"../../components/Navbar\";\r\nimport { roleToString } from \"../../helpers/Role\";\r\nimport { getUser, updateField } from \"../../services/users\";\r\nimport { PropertyComponent } from \"./PropertyComponent\";\r\nimport { universities } from \"../../helpers/Universities\";\r\n\r\n// const useStyles = makeStyles((theme) => ({\r\n//   title: {\r\n//     backgroundColor: \"yellow\",\r\n//   },\r\n// }));\r\n\r\nexport const Profile = () => {\r\n  const [user, setUser] = useState(null);\r\n  const [messageState, setMessageState] = useState({\r\n    showMessage: false,\r\n    message: \"\",\r\n    severity: \"success\",\r\n  });\r\n\r\n  const [editState, setEditState] = useState({\r\n    firstName: false,\r\n    lastName: false,\r\n    localChurch: false,\r\n    university: false,\r\n    universityDegree: false,\r\n  });\r\n  // const classes = useStyles();\r\n\r\n  useEffect(() => {\r\n    getUser().then((user_i) => {\r\n      setUser(user_i);\r\n    });\r\n  }, []);\r\n\r\n  const handleMessageClose = () => {\r\n    setMessageState({ ...messageState, showMessage: false });\r\n  };\r\n\r\n  const handleChange = (e) =>\r\n    setUser({\r\n      ...user,\r\n      [e.target.name]: e.target.value,\r\n    });\r\n\r\n  return user ? (\r\n    <>\r\n      <Snackbar\r\n        open={messageState.showMessage}\r\n        onClose={handleMessageClose}\r\n        autoHideDuration={6000}\r\n      >\r\n        <Alert elevation={6} variant=\"filled\" severity={messageState.severity}>\r\n          {messageState.message}\r\n        </Alert>\r\n      </Snackbar>\r\n      <NavBar active={Path.Profile} />\r\n      <Container maxWidth=\"md\">\r\n        <Grid container>\r\n          <Typography>Email: {user.email}</Typography>\r\n          <PropertyComponent\r\n            label=\"First Name\"\r\n            name=\"firstName\"\r\n            handleChange={handleChange}\r\n            value={user.firstName}\r\n            setMessageState={setMessageState}\r\n            currentTextFieldEditState={editState.firstName}\r\n            setCurrentTextFieldEditState={(bool) => {\r\n              setEditState({ ...editState, firstName: bool });\r\n            }}\r\n            save={updateField}\r\n          />\r\n          <PropertyComponent\r\n            label=\"Last Name\"\r\n            name=\"lastName\"\r\n            handleChange={handleChange}\r\n            value={user.lastName}\r\n            setMessageState={setMessageState}\r\n            currentTextFieldEditState={editState.lastName}\r\n            setCurrentTextFieldEditState={(bool) => {\r\n              setEditState({ ...editState, lastName: bool });\r\n            }}\r\n            save={updateField}\r\n          />\r\n          <PropertyComponent\r\n            label=\"Local Church\"\r\n            name=\"localChurch\"\r\n            handleChange={handleChange}\r\n            value={user.localChurch}\r\n            setMessageState={setMessageState}\r\n            currentTextFieldEditState={editState.localChurch}\r\n            setCurrentTextFieldEditState={(bool) => {\r\n              setEditState({ ...editState, localChurch: bool });\r\n            }}\r\n            save={updateField}\r\n          />\r\n          {editState.university ? (\r\n            <>\r\n              <FormControl variant=\"outlined\" fullWidth>\r\n                <InputLabel id=\"university-label\">Select University</InputLabel>\r\n                <Select\r\n                  disabled={!editState.university}\r\n                  labelId=\"university-label\"\r\n                  id=\"university\"\r\n                  onChange={handleChange}\r\n                  name=\"university\"\r\n                  value={user.university}\r\n                >\r\n                  {universities.map((uni, i) => (\r\n                    <MenuItem key={i} value={uni}>\r\n                      {uni}\r\n                    </MenuItem>\r\n                  ))}\r\n                </Select>\r\n              </FormControl>\r\n              <Button\r\n                onClick={() =>\r\n                  setEditState({ ...editState, university: false })\r\n                }\r\n              >\r\n                Cancel\r\n              </Button>\r\n              <Button\r\n                onClick={() => {\r\n                  updateField(\"university\", user.university, \"University\")\r\n                    .then((response) => {\r\n                      setMessageState({\r\n                        showMessage: true,\r\n                        message: response,\r\n                        severity: \"success\",\r\n                      });\r\n                      setEditState({ ...editState, university: false });\r\n                    })\r\n                    .catch((error) => {\r\n                      setMessageState({\r\n                        showMessage: true,\r\n                        message: error,\r\n                        severity: \"error\",\r\n                      });\r\n                    });\r\n                }}\r\n              >\r\n                Save\r\n              </Button>\r\n            </>\r\n          ) : (\r\n            <>\r\n              <Typography>University: {user.university}</Typography>\r\n              <Button\r\n                onClick={() => setEditState({ ...editState, university: true })}\r\n              >\r\n                Edit\r\n              </Button>\r\n            </>\r\n          )}\r\n          <PropertyComponent\r\n            label=\"University Degree\"\r\n            name=\"universityDegree\"\r\n            handleChange={handleChange}\r\n            value={user.universityDegree}\r\n            setMessageState={setMessageState}\r\n            currentTextFieldEditState={editState.universityDegree}\r\n            setCurrentTextFieldEditState={(bool) => {\r\n              setEditState({ ...editState, universityDegree: bool });\r\n            }}\r\n            save={updateField}\r\n          />\r\n          <Typography>\r\n            Role: {roleToString(user.role)}\r\n            <br />\r\n            Service At SOW: {user.serviceAtSow} years\r\n          </Typography>\r\n          <Grid item xs={12} alignItems=\"center\" justify=\"flex-start\">\r\n            <Link\r\n              underline=\"hover\"\r\n              component={ReactRouterLink}\r\n              to={Path.ResetPassword}\r\n            >\r\n              Reset Password\r\n            </Link>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  ) : (\r\n    <>error</>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Link as ReactRouterLink, Redirect } from \"react-router-dom\";\r\nimport { Form, Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { signup, isAuthenticated } from \"../../services/auth\";\r\nimport { Path } from \"../../helpers/Path\";\r\nimport {\r\n  makeStyles,\r\n  Container,\r\n  Typography,\r\n  TextField,\r\n  Grid,\r\n  Snackbar,\r\n  Link,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { Roles } from \"../../helpers/Role\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n  },\r\n  button: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  bottomLink: {\r\n    textDecoration: \"none\",\r\n    color: \"black\",\r\n    fontSize: \"large\",\r\n  },\r\n}));\r\n\r\nconst signUpFormValidationSchema = yup.object().shape({\r\n  email: yup.string().email().required(\"Enter valid email\"),\r\n  password: yup\r\n    .string()\r\n    .matches(/^(?=.*[A-Za-z])(?=.*[0-9!@#$%^&*()]).{7,20}\\S$/)\r\n    .required(\r\n      \"Please enter a valid password. One alpabetic, one special character or number, length between 8 to 20 characters\"\r\n    ),\r\n  confirmPassword: yup\r\n    .string()\r\n    .required(\"Required\")\r\n    .test(\"password-match\", \"Password must match\", (value) => {\r\n      return this.parent.password === value;\r\n    }),\r\n});\r\n\r\nexport const SignUp = () => {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({ showMessage: false, error: \"\" });\r\n\r\n  const handleMessageClose = () => {\r\n    setState({ ...state, showMessage: false });\r\n  };\r\n\r\n  async function submit(email, password) {\r\n    try {\r\n      await signup(email, password, Roles.Member);\r\n    } catch (error) {\r\n      setState({ error: error.message, showMessage: true });\r\n    }\r\n  }\r\n\r\n  const { showMessage, error } = state;\r\n  return isAuthenticated() ? (\r\n    <Redirect to={Path.Dashboard} />\r\n  ) : (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"sm\">\r\n        <div className={classes.paper}>\r\n          <Snackbar\r\n            open={showMessage}\r\n            onClose={handleMessageClose}\r\n            autoHideDuration={6000}\r\n          >\r\n            <Alert elevation={6} variant=\"filled\" severity=\"error\">\r\n              {error}\r\n            </Alert>\r\n          </Snackbar>\r\n          <Container maxWidth=\"md\">\r\n            <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n              Sign Up\r\n            </Typography>\r\n            <Typography align=\"center\" gutterBottom>\r\n              Create a SOW Account\r\n            </Typography>\r\n          </Container>\r\n          <Formik\r\n            initialValues={{\r\n              email: \"\",\r\n              password: \"\",\r\n              confirmPassword: \"\",\r\n            }}\r\n            onSubmit={(values) => {\r\n              submit(values.email, values.password);\r\n            }}\r\n            validationSchema={signUpFormValidationSchema}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleBlur,\r\n                handleChange,\r\n              } = props;\r\n              return (\r\n                <Form className={classes.form}>\r\n                  <TextField\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    helperText={\r\n                      errors.email && touched.email ? errors.email : \"\"\r\n                    }\r\n                    value={values.email}\r\n                    error={errors.email && touched.email ? true : false}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  <TextField\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    helperText={\r\n                      errors.password && touched.password ? errors.password : \"\"\r\n                    }\r\n                    value={values.password}\r\n                    error={errors.password && touched.password ? true : false}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    autoComplete=\"current-password\"\r\n                  />\r\n                  <TextField\r\n                    required\r\n                    fullWidth\r\n                    name=\"confirmPassword\"\r\n                    label=\"Confirm Password\"\r\n                    value={values.confirmPassword}\r\n                    type=\"password\"\r\n                    helperText={\r\n                      errors.confirmPassword && touched.confirmPassword\r\n                        ? errors.confirmPassword\r\n                        : \"Re-enter password to confirm\"\r\n                    }\r\n                    error={\r\n                      errors.confirmPassword && touched.confirmPassword\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    id=\"confirmPassword\"\r\n                    autoComplete=\"new-password\"\r\n                  />\r\n                  <Grid container className={classes.button}>\r\n                    <Button\r\n                      fullWidth\r\n                      size=\"large\"\r\n                      variant=\"contained\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Sign Up\r\n                    </Button>\r\n                  </Grid>\r\n                </Form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n        <Grid container justify=\"center\">\r\n          <Grid item>\r\n            <Link\r\n              className={classes.bottomLink}\r\n              underline=\"hover\"\r\n              component={ReactRouterLink}\r\n              to={Path.SignIn}\r\n            >\r\n              Already have an account? Log in\r\n            </Link>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Link as ReactRouterLink, Redirect } from \"react-router-dom\";\r\nimport { Form, Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { signin, isAuthenticated } from \"../../services/auth\";\r\nimport { Path } from \"../../helpers/Path\";\r\nimport {\r\n  makeStyles,\r\n  Container,\r\n  Typography,\r\n  TextField,\r\n  Grid,\r\n  Snackbar,\r\n  Link,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n  },\r\n  button: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  bottomLink: {\r\n    textDecoration: \"none\",\r\n    color: \"black\",\r\n    fontSize: \"large\",\r\n  },\r\n}));\r\n\r\nconst signInFormValidationSchema = yup.object().shape({\r\n  email: yup.string().email().required(\"Enter your email\"),\r\n  password: yup.string().required(\"Enter your password\"),\r\n});\r\n\r\nexport const SignIn = () => {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({ showMessage: false, error: \"\" });\r\n\r\n  const handleMessageClose = () => {\r\n    setState({ ...state, showMessage: false });\r\n  };\r\n\r\n  const submit = (email, password) => {\r\n    signin(email, password)\r\n      .then((m) => {\r\n        console.log(m);\r\n      })\r\n      .catch((error) => {\r\n        setState({ error: error.message, showMessage: true });\r\n      });\r\n  };\r\n\r\n  const { showMessage, error } = state;\r\n  return isAuthenticated() ? (\r\n    <Redirect to={Path.Dashboard} />\r\n  ) : (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"sm\">\r\n        <div className={classes.paper}>\r\n          <Snackbar\r\n            open={showMessage}\r\n            onClose={handleMessageClose}\r\n            autoHideDuration={6000}\r\n          >\r\n            <Alert elevation={6} variant=\"filled\" severity=\"error\">\r\n              {error}\r\n            </Alert>\r\n          </Snackbar>\r\n          <Container maxWidth=\"md\">\r\n            <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n              Log In\r\n            </Typography>\r\n            <Typography align=\"center\" gutterBottom>\r\n              Log into your SOW Account\r\n            </Typography>\r\n          </Container>\r\n          <Formik\r\n            initialValues={{\r\n              email: \"\",\r\n              password: \"\",\r\n            }}\r\n            onSubmit={(values) => {\r\n              submit(values.email, values.password);\r\n            }}\r\n            validationSchema={signInFormValidationSchema}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleBlur,\r\n                handleChange,\r\n              } = props;\r\n              return (\r\n                <Form className={classes.form}>\r\n                  <TextField\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    helperText={\r\n                      errors.email && touched.email ? errors.email : \"\"\r\n                    }\r\n                    value={values.email}\r\n                    error={errors.email && touched.email ? true : false}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  <TextField\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    helperText={\r\n                      errors.password && touched.password ? errors.password : \"\"\r\n                    }\r\n                    value={values.password}\r\n                    error={errors.password && touched.password ? true : false}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    autoComplete=\"current-password\"\r\n                  />\r\n                  <Grid container className={classes.button}>\r\n                    <Button\r\n                      fullWidth\r\n                      size=\"large\"\r\n                      variant=\"contained\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Log In\r\n                    </Button>\r\n                  </Grid>\r\n                </Form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n        <Grid container>\r\n          <Grid item xs>\r\n            <Link\r\n              className={classes.bottomLink}\r\n              underline=\"hover\"\r\n              component={ReactRouterLink}\r\n              to={Path.ForgotPassword}\r\n            >\r\n              Forgot password\r\n            </Link>\r\n          </Grid>\r\n          <Grid item>\r\n            <Link\r\n              className={classes.bottomLink}\r\n              underline=\"hover\"\r\n              component={ReactRouterLink}\r\n              to={Path.SignUp}\r\n            >\r\n              Create an account\r\n            </Link>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from \"react\";\r\nimport { Link as ReactRouterLink, Redirect } from \"react-router-dom\";\r\nimport { Form, Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport {\r\n  signin,\r\n  isAuthenticated,\r\n  sendPasswordResetEmail,\r\n} from \"../../services/auth\";\r\nimport { Path } from \"../../helpers/Path\";\r\nimport {\r\n  makeStyles,\r\n  Container,\r\n  Typography,\r\n  TextField,\r\n  Grid,\r\n  Snackbar,\r\n  Link,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n  },\r\n  button: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  bottomLink: {\r\n    textDecoration: \"none\",\r\n    color: \"black\",\r\n    fontSize: \"large\",\r\n  },\r\n}));\r\n\r\nconst forgotPasswordValidationSchema = yup.object().shape({\r\n  email: yup.string().email().required(\"Enter your email\"),\r\n});\r\n\r\nexport const ForgotPassword = () => {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    showMessage: false,\r\n    message: \"\",\r\n    severity: \"error\",\r\n  });\r\n\r\n  const handleMessageClose = () => {\r\n    setState({ ...state, showMessage: false });\r\n  };\r\n\r\n  const { showMessage, message, severity } = state;\r\n\r\n  return isAuthenticated() ? (\r\n    <Redirect to={Path.Dashbaord} />\r\n  ) : (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"sm\">\r\n        <div className={classes.paper}>\r\n          <Snackbar\r\n            open={showMessage}\r\n            onClose={handleMessageClose}\r\n            autoHideDuration={6000}\r\n          >\r\n            <Alert elevation={6} variant=\"filled\" severity={severity}>\r\n              {message}\r\n            </Alert>\r\n          </Snackbar>\r\n          <Container maxWidth=\"md\">\r\n            <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n              Forgot Password\r\n            </Typography>\r\n            <Typography align=\"center\" gutterBottom>\r\n              Enter your email below\r\n            </Typography>\r\n          </Container>\r\n          <Formik\r\n            initialValues={{\r\n              email: \"\",\r\n            }}\r\n            onSubmit={(values) => {\r\n              sendPasswordResetEmail(values.email)\r\n                .then((message) => {\r\n                  setState({\r\n                    severity: \"success\",\r\n                    message: message,\r\n                    showMessage: true,\r\n                  });\r\n                })\r\n                .catch((error) => {\r\n                  console.log(error);\r\n                  setState({\r\n                    severity: \"error\",\r\n                    message: error.message,\r\n                    showMessage: true,\r\n                  });\r\n                });\r\n            }}\r\n            validationSchema={forgotPasswordValidationSchema}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleBlur,\r\n                handleChange,\r\n              } = props;\r\n              return (\r\n                <Form className={classes.form}>\r\n                  <TextField\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    id=\"email\"\r\n                    label=\"Email Address\"\r\n                    name=\"email\"\r\n                    autoComplete=\"email\"\r\n                    helperText={\r\n                      errors.email && touched.email ? errors.email : \"\"\r\n                    }\r\n                    value={values.email}\r\n                    error={errors.email && touched.email ? true : false}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                  />\r\n                  <Grid container className={classes.button}>\r\n                    <Button\r\n                      fullWidth\r\n                      size=\"large\"\r\n                      variant=\"contained\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Send password reset\r\n                    </Button>\r\n                  </Grid>\r\n                </Form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n        <Grid container>\r\n          <Grid item>\r\n            <Link\r\n              className={classes.bottomLink}\r\n              underline=\"hover\"\r\n              component={ReactRouterLink}\r\n              to={Path.SignUp}\r\n            >\r\n              Create an account\r\n            </Link>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","// history.js\r\nimport { createBrowserHistory } from \"history\";\r\n\r\nexport default createBrowserHistory({\r\n  /* pass a configuration object here if needed */\r\n});\r\n","import { createMuiTheme } from \"@material-ui/core/styles\";\r\n\r\nexport const Theme = createMuiTheme({\r\n  palette: {\r\n    primary: {\r\n      light: \"#5f5f5f\",\r\n      main: \"#353535\",\r\n      dark: \"#0f0f0f\",\r\n      contrastText: \"#ffaa00\",\r\n    },\r\n    secondary: {\r\n      light: \"#ffffff\",\r\n      main: \"#2196f3\",\r\n      dark: \"#ffaa00\",\r\n      contrastText: \"#5f5f5f\",\r\n    },\r\n  },\r\n});\r\n","import React, { useState } from \"react\";\r\nimport { Link as ReactRouterLink, Redirect } from \"react-router-dom\";\r\nimport { Form, Formik } from \"formik\";\r\nimport * as yup from \"yup\";\r\nimport { isAuthenticated, resetPassword } from \"../../services/auth\";\r\nimport { Path } from \"../../helpers/Path\";\r\nimport {\r\n  makeStyles,\r\n  Container,\r\n  Typography,\r\n  TextField,\r\n  Grid,\r\n  Snackbar,\r\n  Link,\r\n  Button,\r\n} from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  form: {\r\n    width: \"100%\", // Fix IE 11 issue.\r\n  },\r\n  button: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  bottomLink: {\r\n    textDecoration: \"none\",\r\n    color: \"black\",\r\n    fontSize: \"large\",\r\n  },\r\n}));\r\n\r\nconst resetPasswordFormValidationSchema = yup.object().shape({\r\n  password: yup\r\n    .string()\r\n    .matches(/^(?=.*[A-Za-z])(?=.*[0-9!@#$%^&*()]).{7,20}\\S$/)\r\n    .required(\r\n      \"Please enter a valid password. One alpabetic, one special character or number, length between 8 to 20 characters\"\r\n    ),\r\n  confirmPassword: yup\r\n    .string()\r\n    .required(\"Required\")\r\n    .test(\"password-match\", \"Password must match\", (value) => {\r\n      return this.parent.password === value;\r\n    }),\r\n});\r\n\r\nexport const ResetPassword = () => {\r\n  const classes = useStyles();\r\n  const [state, setState] = useState({\r\n    showMessage: false,\r\n    message: \"\",\r\n    severity: \"error\",\r\n  });\r\n\r\n  const handleMessageClose = () => {\r\n    setState({ ...state, showMessage: false });\r\n  };\r\n\r\n  const { showMessage, message, severity } = state;\r\n\r\n  return !isAuthenticated() ? (\r\n    <Redirect to={Path.SignIn} />\r\n  ) : (\r\n    <>\r\n      <Container component=\"main\" maxWidth=\"sm\">\r\n        <div className={classes.paper}>\r\n          <Snackbar\r\n            open={showMessage}\r\n            onClose={handleMessageClose}\r\n            autoHideDuration={6000}\r\n          >\r\n            <Alert elevation={6} variant=\"filled\" severity={severity}>\r\n              {message}\r\n            </Alert>\r\n          </Snackbar>\r\n          <Container maxWidth=\"md\">\r\n            <Typography variant=\"h4\" align=\"center\" gutterBottom>\r\n              Reset Password\r\n            </Typography>\r\n            <Typography align=\"center\" gutterBottom>\r\n              You can reset your password here\r\n            </Typography>\r\n          </Container>\r\n          <Formik\r\n            initialValues={{\r\n              password: \"\",\r\n              confirmPassword: \"\",\r\n            }}\r\n            onSubmit={(values) => {\r\n              resetPassword(values.password)\r\n                .then((success) => {\r\n                  setState({\r\n                    severity: \"success\",\r\n                    message: success,\r\n                    showMessage: true,\r\n                  });\r\n                })\r\n                .catch((error) => {\r\n                  console.log(error);\r\n                  setState({\r\n                    severity: \"error\",\r\n                    message: error.message,\r\n                    showMessage: true,\r\n                  });\r\n                });\r\n            }}\r\n            validationSchema={resetPasswordFormValidationSchema}\r\n          >\r\n            {(props) => {\r\n              const {\r\n                values,\r\n                errors,\r\n                touched,\r\n                handleBlur,\r\n                handleChange,\r\n              } = props;\r\n              return (\r\n                <Form className={classes.form}>\r\n                  <TextField\r\n                    margin=\"normal\"\r\n                    required\r\n                    fullWidth\r\n                    name=\"password\"\r\n                    label=\"Password\"\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    helperText={\r\n                      errors.password && touched.password ? errors.password : \"\"\r\n                    }\r\n                    value={values.password}\r\n                    error={errors.password && touched.password ? true : false}\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    autoComplete=\"current-password\"\r\n                  />\r\n                  <TextField\r\n                    required\r\n                    fullWidth\r\n                    name=\"confirmPassword\"\r\n                    label=\"Confirm Password\"\r\n                    value={values.confirmPassword}\r\n                    type=\"password\"\r\n                    helperText={\r\n                      errors.confirmPassword && touched.confirmPassword\r\n                        ? errors.confirmPassword\r\n                        : \"Re-enter password to confirm\"\r\n                    }\r\n                    error={\r\n                      errors.confirmPassword && touched.confirmPassword\r\n                        ? true\r\n                        : false\r\n                    }\r\n                    onChange={handleChange}\r\n                    onBlur={handleBlur}\r\n                    id=\"confirmPassword\"\r\n                    autoComplete=\"new-password\"\r\n                  />\r\n                  <Grid container className={classes.button}>\r\n                    <Button\r\n                      fullWidth\r\n                      size=\"large\"\r\n                      variant=\"contained\"\r\n                      type=\"submit\"\r\n                    >\r\n                      Reset Password\r\n                    </Button>\r\n                  </Grid>\r\n                </Form>\r\n              );\r\n            }}\r\n          </Formik>\r\n        </div>\r\n        <Grid container justify=\"center\">\r\n          <Grid item>\r\n            <Link\r\n              className={classes.bottomLink}\r\n              underline=\"hover\"\r\n              component={ReactRouterLink}\r\n              to={Path.Dashboard}\r\n            >\r\n              Go back to dashboard\r\n            </Link>\r\n          </Grid>\r\n        </Grid>\r\n      </Container>\r\n    </>\r\n  );\r\n};\r\n","import React, { Component } from \"react\";\r\nimport {\r\n  Route,\r\n  BrowserRouter as Router,\r\n  Switch,\r\n  Redirect,\r\n} from \"react-router-dom\";\r\nimport { CssBaseline, ThemeProvider } from \"@material-ui/core\";\r\nimport { Home } from \"./pages/Home\";\r\nimport { Dashboard } from \"./pages/Dashboard\";\r\nimport { Profile } from \"./pages/profile/Profile\";\r\nimport { SignUp } from \"./pages/authentication/SignUp\";\r\nimport { SignIn } from \"./pages/authentication/SignIn\";\r\nimport { ForgotPassword } from \"./pages/authentication/ForgotPassword\";\r\nimport { auth } from \"./services/firebase\";\r\nimport \"./styles.css\";\r\nimport history from \"./helpers/History\";\r\nimport { Theme } from \"./helpers/Theme\";\r\nimport { Path } from \"./helpers/Path\";\r\nimport { ResetPassword } from \"./pages/profile/ResetPassword\";\r\n\r\nconst PrivateRoute = ({ component: Component, authenticated, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        authenticated === true ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect\r\n            to={{ pathname: Path.Home, state: { from: props.location } }}\r\n          />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nconst PublicRoute = ({ component: Component, authenticated, ...rest }) => {\r\n  return (\r\n    <Route\r\n      {...rest}\r\n      render={(props) =>\r\n        authenticated === false ? (\r\n          <Component {...props} />\r\n        ) : (\r\n          <Redirect to={Path.Dashboard} />\r\n        )\r\n      }\r\n    />\r\n  );\r\n};\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      authenticated: false,\r\n      loading: true,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    auth.onAuthStateChanged((user) => {\r\n      if (user) {\r\n        this.setState({\r\n          authenticated: true,\r\n          loading: false,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          authenticated: false,\r\n          loading: false,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return this.state.loading === true ? (\r\n      <div className=\"spinner-border text-success\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>\r\n    ) : (\r\n      <CssBaseline>\r\n        <ThemeProvider theme={Theme}>\r\n          <Router history={history}>\r\n            <Switch>\r\n              <Route exact path={Path.Home} component={Home} />\r\n              <PrivateRoute\r\n                path={Path.Dashboard}\r\n                authenticated={this.state.authenticated}\r\n                component={Dashboard}\r\n              />\r\n              <PrivateRoute\r\n                path={Path.Profile}\r\n                authenticated={this.state.authenticated}\r\n                component={Profile}\r\n              />\r\n              <PrivateRoute\r\n                path={Path.ResetPassword}\r\n                authenticated={this.state.authenticated}\r\n                component={ResetPassword}\r\n              />\r\n              <PublicRoute\r\n                path={Path.SignUp}\r\n                authenticated={this.state.authenticated}\r\n                component={SignUp}\r\n              />\r\n              <PublicRoute\r\n                path={Path.SignIn}\r\n                authenticated={this.state.authenticated}\r\n                component={SignIn}\r\n              />\r\n              <PublicRoute\r\n                path={Path.ForgotPassword}\r\n                authenticated={this.state.authenticated}\r\n                component={ForgotPassword}\r\n              />\r\n            </Switch>\r\n          </Router>\r\n        </ThemeProvider>\r\n      </CssBaseline>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nconst rootElement = document.getElementById(\"root\");\r\nReactDOM.render(<App />, rootElement);\r\n"],"sourceRoot":""}